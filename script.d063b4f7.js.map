{"version":3,"sources":["script.js"],"names":["canvas","document","getElementById","height","body","clientHeight","width","clientWidth","ctx","getContext","balls","_ballRadius","_gravity","_xDrag","Ball","positionX","positionY","velocityX","velocityY","position","x","y","velocity","getPosition","setPosition","getVelocity","setVelocity","randomNumber","Math","floor","random","onclick","addNewBall","event","push","clientX","clientY","setInterval","loop","length","clearRect","forEach","ball","beginPath","arc","PI","fillStyle","fill","closePath","recalculatePosition","abs"],"mappings":";CAAA,WACMA,IAAAA,EAASC,SAASC,eAAe,UACrCF,EAAOG,OAASF,SAASG,KAAKC,aAC9BL,EAAOM,MAAQL,SAASG,KAAKG,YACzBC,IAAAA,EAAMR,EAAOS,WAAW,MAExBC,EAAQ,GAGRC,EAAc,EACdC,EAAW,GACXC,EAAS,GAAM,GAaVC,SAAAA,EAAKC,EAAWC,EAAWC,EAAWC,GACzCC,IAAAA,EAAW,CAAEC,EAAGL,EAAWM,EAAGL,GAC9BM,EAAW,CAAEF,EAAGH,EAAWI,EAAGH,GAE7BK,KAAAA,YAAc,WACVJ,OAAAA,GAGJK,KAAAA,YAAc,SAAUJ,EAAGC,GAC9BF,EAAW,CAAEC,EAAGA,EAAGC,EAAGA,IAGnBI,KAAAA,YAAc,WACVH,OAAAA,GAGJI,KAAAA,YAAc,SAAUN,EAAGC,GAC9BC,EAAW,CAAEF,EAAGA,EAAGC,EAAGA,IAajBM,SAAAA,IACAC,OAAAA,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAzC1C9B,EAAO+B,QAkCEC,SAAWC,GAClBvB,EAAMwB,KACJ,IAAIpB,EAAKmB,EAAME,QAASF,EAAMG,QAAST,IAAgBA,OAQ3DU,YAESC,WACH,IAAC5B,EAAM6B,OACT,OAEF/B,EAAIgC,UAAU,EAAG,EAAGxC,EAAOM,MAAON,EAAOG,QACzCO,EAAM+B,QAAQ,SAAUC,GAClBvB,IAAAA,EAAWuB,EAAKnB,cAEpBf,EAAImC,YACJnC,EAAIoC,IAAIzB,EAASC,EAAGD,EAASE,EAAGV,EAAa,EAAa,EAAViB,KAAKiB,IACrDrC,EAAIsC,UAAY,OAChBtC,EAAIuC,OACJvC,EAAIwC,YAWCC,SAAoBP,GACvBvB,IAAAA,EAAWuB,EAAKnB,cAChBD,EAAWoB,EAAKjB,cAEpBN,EAASC,GAAKE,EAASF,EACvBD,EAASE,GAAKC,EAASD,GAIrBF,EAASC,EAAIT,EAAc,GAC3BQ,EAASC,EAAIpB,EAAOM,MAAQK,KAE5BW,EAASF,IAAM,GAIbD,EAASE,EAAIV,EAAcX,EAAOG,SAEpCgB,EAASE,EAAIrB,EAAOG,OAASQ,EAC7BW,EAASD,IAAM,EACfC,EAASD,GAAK,GAGVC,EAASD,EAAI,GAAKC,EAASD,GAAK,KAAsB,IAAfC,EAASF,IAClDE,EAASD,EAAI,GAGXO,KAAKsB,IAAI5B,EAASF,GAAK,MACzBE,EAASF,EAAI,IAIjBE,EAASD,GAAKT,EAEVU,EAASF,EAAI,IACfE,EAASF,GAAKP,GAEZS,EAASF,EAAI,IACfE,EAASF,GAAKP,GAGhB6B,EAAKlB,YAAYL,EAASC,EAAGD,EAASE,GACtCqB,EAAKhB,YAAYJ,EAASF,EAAGE,EAASD,GAlDpC4B,CAAoBP,MAtER,EAAI,GAAM,KAL5B","file":"script.d063b4f7.js","sourceRoot":"..","sourcesContent":["(function () {\n  var canvas = document.getElementById(\"canvas\");\n  canvas.height = document.body.clientHeight;\n  canvas.width = document.body.clientWidth;\n  var ctx = canvas.getContext(\"2d\");\n  var INTERVAL = (1 / 60) * 1000;\n  var balls = [];\n\n  // Setup some constants stuff\n  var _ballRadius = 5;\n  var _gravity = 0.5; // Acceleration due to gravity\n  var _xDrag = 0.8 / 60;\n\n  // Add click listener\n  canvas.onclick = addNewBall;\n\n  /**\n   * Creates a new Ball\n   * @class\n   * @param {number} positionX\n   * @param {number} positionY\n   * @param {number} velocityX\n   * @param {number} velocityY\n   */\n  function Ball(positionX, positionY, velocityX, velocityY) {\n    var position = { x: positionX, y: positionY };\n    var velocity = { x: velocityX, y: velocityY };\n\n    this.getPosition = function () {\n      return position;\n    };\n\n    this.setPosition = function (x, y) {\n      position = { x: x, y: y };\n    };\n\n    this.getVelocity = function () {\n      return velocity;\n    };\n\n    this.setVelocity = function (x, y) {\n      velocity = { x: x, y: y };\n    };\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function addNewBall(event) {\n    balls.push(\n      new Ball(event.clientX, event.clientY, randomNumber(), randomNumber())\n    );\n  }\n\n  function randomNumber() {\n    return Math.floor(Math.random() * 20) - 10;\n  }\n\n  setInterval(loop, INTERVAL);\n\n  function loop() {\n    if (!balls.length) {\n      return;\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    balls.forEach(function (ball) {\n      var position = ball.getPosition();\n      // Render ball\n      ctx.beginPath();\n      ctx.arc(position.x, position.y, _ballRadius, 0, Math.PI * 2);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.closePath();\n\n      // Recalculate position for next render\n      recalculatePosition(ball);\n    });\n  }\n\n  /**\n   * Recalculates the position of the ball\n   * @param {Ball} ball\n   */\n  function recalculatePosition(ball) {\n    var position = ball.getPosition();\n    var velocity = ball.getVelocity();\n\n    position.x += velocity.x;\n    position.y += velocity.y;\n\n    // If either wall is hit, change direction on x axis and slow down slightly\n    if (\n      position.x - _ballRadius < 0 ||\n      position.x > canvas.width - _ballRadius\n    ) {\n      velocity.x *= -1;\n    }\n\n    // If hits floor\n    if (position.y + _ballRadius > canvas.height) {\n      // Reset ball position on y axis\n      position.y = canvas.height - _ballRadius;\n      velocity.y *= -1;\n      velocity.y *= 0.8;\n\n      // Stop ball from moving at the end\n      if (velocity.y < 0 && velocity.y > -3.5 && velocity.x === 0) {\n        velocity.y = 0;\n      }\n\n      if (Math.abs(velocity.x) < 1.1) {\n        velocity.x = 0;\n      }\n    }\n\n    velocity.y += _gravity;\n\n    if (velocity.x > 0) {\n      velocity.x -= _xDrag;\n    }\n    if (velocity.x < 0) {\n      velocity.x += _xDrag;\n    }\n\n    ball.setPosition(position.x, position.y);\n    ball.setVelocity(velocity.x, velocity.y);\n  }\n})();\n"]}