{"version":3,"sources":["script.js"],"names":["canvas","document","getElementById","height","body","clientHeight","width","clientWidth","ctx","getContext","balls","_ballRadius","_gravity","_xDrag","onclick","addNewBall","event","push","Ball","clientX","clientY","randomNumber","positionX","positionY","velocityX","velocityY","position","x","y","velocity","Math","floor","random","setInterval","loop","length","clearRect","forEach","ball","getPosition","beginPath","arc","PI","fillStyle","fill","closePath","recalculatePosition","getVelocity","abs","setPosition","setVelocity"],"mappings":";AAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,WACQA,IAAAA,EAASC,SAASC,eAAe,UACvCF,EAAOG,OAASF,SAASG,KAAKC,aAC9BL,EAAOM,MAAQL,SAASG,KAAKG,YACvBC,IAAAA,EAAMR,EAAOS,WAAW,MAExBC,EAAQ,GAGRC,EAAc,EACdC,EAAW,GACXC,EAAS,GAAM,GAGrBb,EAAOc,QAyDEC,SAAWC,GAClBN,EAAMO,KACJ,IAAIC,EAAKF,EAAMG,QAASH,EAAMI,QAASC,IAAgBA,OA5BrDH,IAAAA,EA7CK,WA8CGI,SAAAA,EAAAA,EAAWC,EAAWC,EAAWC,GAAW,EAAA,KAAA,GACjDC,KAAAA,SAAW,CAAEC,EAAGL,EAAWM,EAAGL,GAC9BM,KAAAA,SAAW,CAAEF,EAAGH,EAAWI,EAAGH,GAhD5B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cAmDK,MAAA,WACL,OAAA,KAAKC,WApDL,CAAA,IAAA,cAuDGC,MAAAA,SAAAA,EAAGC,GACRF,KAAAA,SAAW,CAAEC,EAAGA,EAAGC,EAAGA,KAxDpB,CAAA,IAAA,cA2DK,MAAA,WACL,OAAA,KAAKC,WA5DL,CAAA,IAAA,cA+DGF,MAAAA,SAAAA,EAAGC,GACRC,KAAAA,SAAW,CAAEF,EAAGA,EAAGC,EAAGA,OAhEpB,EAAA,GA6EFP,SAAAA,IACAS,OAAAA,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG1CC,YAESC,WACH,IAACxB,EAAMyB,OACT,OAEF3B,EAAI4B,UAAU,EAAG,EAAGpC,EAAOM,MAAON,EAAOG,QACzCO,EAAM2B,QAAQ,SAAUC,GAChBZ,IAAAA,EAAWY,EAAKC,cAEtB/B,EAAIgC,YACJhC,EAAIiC,IAAIf,EAASC,EAAGD,EAASE,EAAGjB,EAAa,EAAa,EAAVmB,KAAKY,IACrDlC,EAAImC,UAAY,OAChBnC,EAAIoC,OACJpC,EAAIqC,YAWCC,SAAoBR,GACrBZ,IAAAA,EAAWY,EAAKC,cAChBV,EAAWS,EAAKS,cAEtBrB,EAASC,GAAKE,EAASF,EACvBD,EAASE,GAAKC,EAASD,GAIrBF,EAASC,EAAIhB,EAAc,GAC3Be,EAASC,EAAI3B,EAAOM,MAAQK,KAE5BkB,EAASF,IAAM,GAIbD,EAASE,EAAIjB,EAAcX,EAAOG,SAEpCuB,EAASE,EAAI5B,EAAOG,OAASQ,EAC7BkB,EAASD,IAAM,EACfC,EAASD,GAAK,GAGVC,EAASD,EAAI,GAAKC,EAASD,GAAK,KAAsB,IAAfC,EAASF,IAClDE,EAASD,EAAI,GAGXE,KAAKkB,IAAInB,EAASF,GAAK,MACzBE,EAASF,EAAI,IAIjBE,EAASD,GAAKhB,EAEViB,EAASF,EAAI,IACfE,EAASF,GAAKd,GAEZgB,EAASF,EAAI,IACfE,EAASF,GAAKd,GAGhByB,EAAKW,YAAYvB,EAASC,EAAGD,EAASE,GACtCU,EAAKY,YAAYrB,EAASF,EAAGE,EAASD,GAlDpCkB,CAAoBR,MA7FN,EAAI,GAAM,KAL9B","file":"script.833da265.js","sourceRoot":"..","sourcesContent":["(function () {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.height = document.body.clientHeight;\n  canvas.width = document.body.clientWidth;\n  const ctx = canvas.getContext(\"2d\");\n  const INTERVAL = (1 / 60) * 1000;\n  const balls = [];\n\n  // Setup some constants stuff\n  const _ballRadius = 5;\n  const _gravity = 0.5; // Acceleration due to gravity\n  const _xDrag = 0.8 / 60;\n\n  // Add click listener\n  canvas.onclick = addNewBall;\n\n  // /**\n  //  * Creates a new Ball\n  //  * @class\n  //  * @param {number} positionX\n  //  * @param {number} positionY\n  //  * @param {number} velocityX\n  //  * @param {number} velocityY\n  //  */\n  // function Ball(positionX, positionY, velocityX, velocityY) {\n  //   const position = { x: positionX, y: positionY };\n  //   const velocity = { x: velocityX, y: velocityY };\n\n  //   this.getPosition = function () {\n  //     return position;\n  //   };\n\n  //   this.setPosition = function (x, y) {\n  //     position = { x: x, y: y };\n  //   };\n\n  //   this.getVelocity = function () {\n  //     return velocity;\n  //   };\n\n  //   this.setVelocity = function (x, y) {\n  //     velocity = { x: x, y: y };\n  //   };\n  // }\n\n  class Ball {\n    constructor(positionX, positionY, velocityX, velocityY) {\n      this.position = { x: positionX, y: positionY };\n      this.velocity = { x: velocityX, y: velocityY };\n    }\n\n    getPosition() {\n      return this.position;\n    }\n\n    setPosition(x, y) {\n      this.position = { x: x, y: y };\n    }\n\n    getVelocity() {\n      return this.velocity;\n    }\n\n    setVelocity(x, y) {\n      this.velocity = { x: x, y: y };\n    }\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function addNewBall(event) {\n    balls.push(\n      new Ball(event.clientX, event.clientY, randomNumber(), randomNumber())\n    );\n  }\n\n  function randomNumber() {\n    return Math.floor(Math.random() * 20) - 10;\n  }\n\n  setInterval(loop, INTERVAL);\n\n  function loop() {\n    if (!balls.length) {\n      return;\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    balls.forEach(function (ball) {\n      const position = ball.getPosition();\n      // Render ball\n      ctx.beginPath();\n      ctx.arc(position.x, position.y, _ballRadius, 0, Math.PI * 2);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.closePath();\n\n      // Recalculate position for next render\n      recalculatePosition(ball);\n    });\n  }\n\n  /**\n   * Recalculates the position of the ball\n   * @param {Ball} ball\n   */\n  function recalculatePosition(ball) {\n    const position = ball.getPosition();\n    const velocity = ball.getVelocity();\n\n    position.x += velocity.x;\n    position.y += velocity.y;\n\n    // If either wall is hit, change direction on x axis and slow down slightly\n    if (\n      position.x - _ballRadius < 0 ||\n      position.x > canvas.width - _ballRadius\n    ) {\n      velocity.x *= -1;\n    }\n\n    // If hits floor\n    if (position.y + _ballRadius > canvas.height) {\n      // Reset ball position on y axis\n      position.y = canvas.height - _ballRadius;\n      velocity.y *= -1;\n      velocity.y *= 0.8;\n\n      // Stop ball from moving at the end\n      if (velocity.y < 0 && velocity.y > -3.5 && velocity.x === 0) {\n        velocity.y = 0;\n      }\n\n      if (Math.abs(velocity.x) < 1.1) {\n        velocity.x = 0;\n      }\n    }\n\n    velocity.y += _gravity;\n\n    if (velocity.x > 0) {\n      velocity.x -= _xDrag;\n    }\n    if (velocity.x < 0) {\n      velocity.x += _xDrag;\n    }\n\n    ball.setPosition(position.x, position.y);\n    ball.setVelocity(velocity.x, velocity.y);\n  }\n})();\n"]}