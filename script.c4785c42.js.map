{"version":3,"sources":["script.js"],"names":["canvas","document","getElementById","height","body","clientHeight","width","clientWidth","ctx","getContext","balls","BALL_RADIUS","GRAVITY","X_DRAG","onclick","addNewBall","clientX","clientY","push","Ball","randomVelocity","positionX","positionY","velocityX","velocityY","position","x","y","velocity","Math","floor","random","setInterval","loop","length","clearRect","forEach","ball","beginPath","arc","PI","fillStyle","fill","closePath","recalculatePosition","abs"],"mappings":";AAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,sCAAA,WACQA,IAAAA,EAASC,SAASC,eAAe,UACvCF,EAAOG,OAASF,SAASG,KAAKC,aAC9BL,EAAOM,MAAQL,SAASG,KAAKG,YACvBC,IAAAA,EAAMR,EAAOS,WAAW,MACxBC,EAAQ,GAIRC,EAAc,EACdC,EAAU,GACVC,EAAS,GAAM,GAGrBb,EAAOc,QAYEC,SAAiC,GAApBC,IAAAA,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,QAC7BP,EAAMQ,KAAK,IAAIC,EAAKH,EAASC,EAASG,IAAkBA,OAXpDD,IAAAA,EACJ,SAAYE,EAAAA,EAAWC,EAAWC,EAAWC,GAAW,EAAA,KAAA,GACjDC,KAAAA,SAAW,CAAEC,EAAGL,EAAWM,EAAGL,GAC9BM,KAAAA,SAAW,CAAEF,EAAGH,EAAWI,EAAGH,IAW9BJ,SAAAA,IACAS,OAAAA,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG1CC,YAESC,WACH,IAACvB,EAAMwB,OACT,OAEF1B,EAAI2B,UAAU,EAAG,EAAGnC,EAAOM,MAAON,EAAOG,QACzCO,EAAM0B,QAAQ,SAACC,GAGTA,IAAAA,EAAAA,EADFZ,SAAYC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAGjBnB,EAAI8B,YACJ9B,EAAI+B,IAAIb,EAAGC,EAAGhB,EAAa,EAAa,EAAVkB,KAAKW,IACnChC,EAAIiC,UAAY,OAChBjC,EAAIkC,OACJlC,EAAImC,YAWCC,SAA4C,GAAtBnB,IAAAA,EAAAA,EAAAA,SAAUG,EAAAA,EAAAA,SACvCH,EAASC,GAAKE,EAASF,EACvBD,EAASE,GAAKC,EAASD,GAIrBF,EAASC,EAAIf,EAAc,GAC3Bc,EAASC,EAAI1B,EAAOM,MAAQK,KAE5BiB,EAASF,IAAM,GAIbD,EAASE,EAAIhB,EAAcX,EAAOG,SAEpCsB,EAASE,EAAI3B,EAAOG,OAASQ,EAC7BiB,EAASD,IAAM,EACfC,EAASD,GAAK,GAGVC,EAASD,EAAI,GAAKC,EAASD,GAAK,IAAsB,IAAfC,EAASF,IAClDE,EAASD,EAAI,GAGXE,KAAKgB,IAAIjB,EAASF,GAAK,KACzBE,EAASF,EAAI,IAIjBE,EAASD,GAAKf,EAEVgB,EAASF,EAAI,IACfE,EAASF,GAAKb,GAEZe,EAASF,EAAI,IACfE,EAASF,GAAKb,GA3Cd+B,CAAoBP,MA7CN,EAAI,GAAM,KAR9B","file":"script.c4785c42.js","sourceRoot":"..","sourcesContent":["(function () {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.height = document.body.clientHeight;\n  canvas.width = document.body.clientWidth;\n  const ctx = canvas.getContext(\"2d\");\n  const balls = [];\n\n  // Setup some constants stuff\n  const INTERVAL = (1 / 60) * 1000;\n  const BALL_RADIUS = 5;\n  const GRAVITY = 0.5; // Acceleration due to gravity\n  const X_DRAG = 0.8 / 60;\n\n  // Add click listener\n  canvas.onclick = addNewBall;\n\n  class Ball {\n    constructor(positionX, positionY, velocityX, velocityY) {\n      this.position = { x: positionX, y: positionY };\n      this.velocity = { x: velocityX, y: velocityY };\n    }\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function addNewBall({ clientX, clientY }) {\n    balls.push(new Ball(clientX, clientY, randomVelocity(), randomVelocity()));\n  }\n\n  function randomVelocity() {\n    return Math.floor(Math.random() * 20) - 10;\n  }\n\n  setInterval(loop, INTERVAL);\n\n  function loop() {\n    if (!balls.length) {\n      return;\n    }\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    balls.forEach((ball) => {\n      const {\n        position: { x, y },\n      } = ball;\n      // Render ball\n      ctx.beginPath();\n      ctx.arc(x, y, BALL_RADIUS, 0, Math.PI * 2);\n      ctx.fillStyle = \"#000\";\n      ctx.fill();\n      ctx.closePath();\n\n      // Recalculate position for next render\n      recalculatePosition(ball);\n    });\n  }\n\n  /**\n   * Recalculates the position of the ball\n   * @param {Ball} ball\n   */\n  function recalculatePosition({ position, velocity }) {\n    position.x += velocity.x;\n    position.y += velocity.y;\n\n    // If either wall is hit, change direction on x axis and slow down slightly\n    if (\n      position.x - BALL_RADIUS < 0 ||\n      position.x > canvas.width - BALL_RADIUS\n    ) {\n      velocity.x *= -1;\n    }\n\n    // If hits floor\n    if (position.y + BALL_RADIUS > canvas.height) {\n      // Reset ball position on y axis\n      position.y = canvas.height - BALL_RADIUS;\n      velocity.y *= -1;\n      velocity.y *= 0.8;\n\n      // Stop ball from moving at the end\n      if (velocity.y < 0 && velocity.y > -0.1 && velocity.x === 0) {\n        velocity.y = 0;\n      }\n\n      if (Math.abs(velocity.x) < 0.1) {\n        velocity.x = 0;\n      }\n    }\n\n    velocity.y += GRAVITY;\n\n    if (velocity.x > 0) {\n      velocity.x -= X_DRAG;\n    }\n    if (velocity.x < 0) {\n      velocity.x += X_DRAG;\n    }\n  }\n})();\n"]}